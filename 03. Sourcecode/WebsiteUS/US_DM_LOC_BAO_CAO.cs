///************************************************
/// Generated by: NinhVH
/// Date: 25/08/2013 03:49:57
/// Goal: Create User Service Class for DM_LOC_BAO_CAO
///************************************************
/// <summary>
/// Create User Service Class for DM_LOC_BAO_CAO
/// </summary>

using System;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using WebDS;
using WebDS.CDBNames;


namespace WebUS
{

    public class US_DM_LOC_BAO_CAO : US_Object
    {
        private const string c_TableName = "DM_LOC_BAO_CAO";
        #region "Public Properties"
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strTEN_BAO_CAO
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "TEN_BAO_CAO", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["TEN_BAO_CAO"] = value;
            }
        }

        public bool IsTEN_BAO_CAONull()
        {
            return pm_objDR.IsNull("TEN_BAO_CAO");
        }

        public void SetTEN_BAO_CAONull()
        {
            pm_objDR["TEN_BAO_CAO"] = System.Convert.DBNull;
        }

        public string strDUONG_DAN
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "DUONG_DAN", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["DUONG_DAN"] = value;
            }
        }

        public bool IsDUONG_DANNull()
        {
            return pm_objDR.IsNull("DUONG_DAN");
        }

        public void SetDUONG_DANNull()
        {
            pm_objDR["DUONG_DAN"] = System.Convert.DBNull;
        }

        public decimal dcID_LOAI_TAI_SAN
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID_LOAI_TAI_SAN", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID_LOAI_TAI_SAN"] = value;
            }
        }

        public bool IsID_LOAI_TAI_SANNull()
        {
            return pm_objDR.IsNull("ID_LOAI_TAI_SAN");
        }

        public void SetID_LOAI_TAI_SANNull()
        {
            pm_objDR["ID_LOAI_TAI_SAN"] = System.Convert.DBNull;
        }

        public decimal dcID_LOAI_BAO_CAO
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID_LOAI_BAO_CAO", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID_LOAI_BAO_CAO"] = value;
            }
        }

        public bool IsID_LOAI_BAO_CAONull()
        {
            return pm_objDR.IsNull("ID_LOAI_BAO_CAO");
        }

        public void SetID_LOAI_BAO_CAONull()
        {
            pm_objDR["ID_LOAI_BAO_CAO"] = System.Convert.DBNull;
        }

        public string strGHI_CHU
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "GHI_CHU", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["GHI_CHU"] = value;
            }
        }

        public bool IsGHI_CHUNull()
        {
            return pm_objDR.IsNull("GHI_CHU");
        }

        public void SetGHI_CHUNull()
        {
            pm_objDR["GHI_CHU"] = System.Convert.DBNull;
        }

        #endregion
        #region "Init Functions"
        public US_DM_LOC_BAO_CAO()
        {
            pm_objDS = new DS_DM_LOC_BAO_CAO();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_DM_LOC_BAO_CAO(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_DM_LOC_BAO_CAO(decimal i_dbID)
        {
            pm_objDS = new DS_DM_LOC_BAO_CAO();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion
    }
}
